# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

name: BackendPipeline
trigger:
  branches:
    include:
    - main

resources:
  pipelines:
    - pipeline: devops-backend-trigger
      source: abdulalikhan.devops-frontend
      trigger: true

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python39:
      python.version: '3.9'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    pip install pytest pytest-azurepipelines
    pytest tests/test_list.py tests/test_create.py tests/test_update.py tests/test_delete.py --junitxml=junit/test-results.xml
  displayName: 'Execute tests'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '*.xml'

- task: Docker@2
  displayName: 'Build and push Docker image'
  inputs:
    containerRegistry: 'DockerHub'
    repository: 'abdulalikhan/devops-backend'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: '$(Build.BuildId)'
    
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
    includeRootFolder: false
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true
  displayName: 'Archive files'


- task: PublishBuildArtifacts@1
  inputs:
    artifactName: 'backend'
    pathToPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'