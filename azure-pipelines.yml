name: BackendPipeline
trigger:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python39:
      python.version: "3.9"

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: "$(python.version)"
    displayName: "Use Python $(python.version)"

  - script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
    displayName: "Install dependencies"

  - task: dependency-check-build-task@6
    inputs:
      projectName: 'DevOps Project'
      scanPath: ""
      format: 'HTML'
      failOnCVSS: '8'
      warnOnCVSSViolation: true

  - script: |
      pip install pytest pytest-azurepipelines
      pytest tests/test_list.py tests/test_create.py tests/test_update.py tests/test_delete.py tests/test_frontend.py --junitxml=junit/test-results.xml
    displayName: "Execute tests"

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "**/*.xml"

  - task: CopyFiles@2
    inputs:
      SourceFolder: "$(System.DefaultWorkingDirectory)/junit"
      Contents: "*.xml"
      TargetFolder: "$(Build.ArtifactStagingDirectory)/test-xml"
      CleanTargetFolder: true
    displayName: "Copy test xml files"
    
  - task: Docker@2
    displayName: "Build and push Docker image"
    inputs:
      containerRegistry: "DockerHub"
      repository: "abdulalikhan/devops-backend"
      command: "buildAndPush"
      Dockerfile: "**/Dockerfile"
      tags: |
        latest
        $(Build.BuildId)



  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: "$(System.DefaultWorkingDirectory)"
      includeRootFolder: false
      archiveFile: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip"
      replaceExistingArchive: true
    displayName: "Archive files"

  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: "backend"
      pathToPublish: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip"

  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: "test-results"
      pathToPublish: "$(Build.ArtifactStagingDirectory)/test-xml"
